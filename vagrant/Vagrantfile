# -*- mode: ruby -*-
# vi: set ft=ruby :

# Arrange nodes in reverse order so the manager is the last vm to be provisioned
cluster = {
  "finding-aid-discovery-manager" => { :ip => "10.10.2.206", :cpus => 1, :mem => 2048, :port => 2020 }
}

Vagrant.configure("2") do |config|
  config.vagrant.plugins = ["vagrant-vbguest", "vagrant-hostsupdater"]

  # Add domains to hosts file
  config.hostsupdater.aliases = {
    "10.10.2.206" => [
      "finding-aid-discovery-dev.library.upenn.edu"
    ]
  }

  cluster.each_with_index do |(hostname, info), index|
    config.vm.box = "ubuntu/focal64"

    # Use the default insecure key as this is only used for development
    config.ssh.insert_key = false

    config.vm.define hostname do |cfg|
      cfg.vm.provider :virtualbox do |vb, override|
        override.vm.network :private_network, ip: "#{info[:ip]}"
        override.vm.network :forwarded_port, id: "ssh", host: info[:port], guest: 22
        override.vm.hostname = hostname
        vb.name = hostname
        vb.customize ["modifyvm", :id, "--memory", info[:mem], "--cpus", info[:cpus], "--hwvirtex", "on"]
        # push the first interface far out enough to minimize potential conflict with docker swarm
        # which defaults to 10.0.0.0/8 for networks/containers
        vb.customize ["modifyvm", :id, "--natnet1", "10.252/16"]
      end

      # only if you need to expose on your local network; usually not necessary
      # cfg.vm.provider :virtualbox do |vb, override|
      #   override.vm.network :forwarded_port, id: "http", host: 8080, guest: 80
      # end

      # Add volumes for development
      config.vm.synced_folder "../ansible/roles/finding_aid_discovery/files/src/", "/finding_aid_discovery"

      cfg.vm.provision :ansible do |ansible|
        ansible.ask_vault_pass = true
        ansible.config_file = "../ansible/ansible.vagrant.cfg"
        ansible.inventory_path = "../ansible/inventories/vagrant"
        ansible.galaxy_role_file = "../ansible/roles/requirements.dev.yml"
        ansible.galaxy_roles_path = "../ansible/roles"
        ansible.galaxy_command = "ansible-galaxy install -r %{role_file} --force"
        ansible.limit = "all"
        ansible.playbook = "../ansible/vagrant.yml"
        ansible.verbose = false
      end
    end
  end
end
