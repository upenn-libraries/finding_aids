# -*- mode: ruby -*-
# vi: set ft=ruby :

# Arrange nodes in reverse order so the manager is the last vm to be provisioned
cluster = {
  "finding-aid-discovery-manager" => { :ip => "10.10.2.206", :cpus => 1, :mem => 2048, :port => 2020 }
}

# Function to get ansible vault password
class Password
  def to_s
    begin
      system 'stty -echo'
      print "Ansible Vault Password: "
      pass = URI.escape(STDIN.gets.chomp)
    ensure
      system 'stty echo'
    end

    print "\n"
    pass
  end
end

Vagrant.configure("2") do |config|
  config.vagrant.plugins = ["vagrant-vbguest", "vagrant-hostsupdater"]

  # Add domains to hosts file
  config.hostsupdater.aliases = {
    "10.10.2.206" => [
      "finding-aid-discovery-dev.library.upenn.edu"
    ]
  }

  cluster.each_with_index do |(hostname, info), index|
    config.vm.box = "ubuntu/focal64"

    # Use the default insecure key as this is only used for development
    config.ssh.insert_key = false

    config.vm.define hostname do |cfg|
      cfg.vm.provider :virtualbox do |vb, override|
        override.vm.network :private_network, ip: "#{info[:ip]}"
        override.vm.network :forwarded_port, id: "ssh", host: info[:port], guest: 22
        override.vm.hostname = hostname
        vb.name = hostname
        vb.customize ["modifyvm", :id, "--memory", info[:mem], "--cpus", info[:cpus], "--hwvirtex", "on"]
        # push the first interface far out enough to minimize potential conflict with docker swarm
        # which defaults to 10.0.0.0/8 for networks/containers
        vb.customize ["modifyvm", :id, "--natnet1", "10.252/16"]
      end

      # If you need to expose on your local network; usually not necessary
      # cfg.vm.provider :virtualbox do |vb, override|
      #   override.vm.network :forwarded_port, id: "http", host: 8080, guest: 80
      # end

      # Add volumes for development
      cfg.vm.synced_folder "../", "/finding_aid_discovery"

      # Get and assign vault password
      cfg.vm.provision "shell", env: {"VAULT_PASS" => Password.new}, inline: <<-SHELL
        echo "${VAULT_PASS}" > /tmp/vault_pass
      SHELL

      cfg.vm.provision :ansible_local do |ansible|
        ansible.config_file = "/finding_aid_discovery/ansible/ansible.vagrant.cfg"
        ansible.extra_vars = {
          ansible_python_interpreter: "/usr/bin/env python3"
        }
        ansible.install_mode = "pip3"
        ansible.inventory_path = "/finding_aid_discovery/ansible/inventories/vagrant"
        ansible.galaxy_role_file = "/finding_aid_discovery/ansible/roles/requirements.dev.yml"
        ansible.galaxy_roles_path = "/finding_aid_discovery/ansible/roles"
        ansible.galaxy_command = "ansible-galaxy install -r %{role_file} --force"
        ansible.limit = "all"
        ansible.playbook = "/finding_aid_discovery/ansible/vagrant.yml"
        ansible.vault_password_file = "/tmp/vault_pass"
        ansible.verbose = false
      end
    end
  end
end
