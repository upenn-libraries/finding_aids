include:
  - project: "devops/gitlab/ci-templates/docker"
    ref: "multistage"
    file:
      - ".build_docker_image.yml"
      - ".push_docker_image.yml"
      - ".remove_docker_image.yml"
      - ".remove_docker_image_from_registry.yml"
  - project: "devops/gitlab/ci-templates/ruby"
    ref: "sans-dind"
    file: ".rspec.yml"
  - project: "devops/gitlab/ci-templates/sast"
    ref: "master"
    file:
      - ".trivy_container_scanning.yml"
  - template: "Workflows/MergeRequest-Pipelines.gitlab-ci.yml"

stages:
  - build_and_push:tmp_base_image
  - build_and_push:tmp_dev_image
  - build_and_push:tmp_solr_image
  - test
  - build_and_push:tmp_prod_image
  - sast
  - remove:tmp_images_from_registry
  - push:final_images
  - remove:tmp_images_from_host

# -- Start - build and push base image
build_base_app_image:
  stage: build_and_push:tmp_base_image
  extends:
    - .build_docker_image
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_BUILD_CONTEXT: "ansible/roles/finding_aid_discovery/files/src/"
    DOCKER_TARGET: "base"
    DOCKERFILE_PATH: "ansible/roles/finding_aid_discovery/files/src/"
  tags:
    - build

push_tmp_base_app_image_to_registry:
  stage: build_and_push:tmp_base_image
  extends:
    - .push_docker_image
  needs:
    - build_base_app_image
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_IMAGE_NAME: "app"
    DOCKER_TARGET: "base"
    IMAGE_TAGS: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  tags:
    - build
# -- End - build and push base image

# -- Start - build, push temp dev image
build_dev_app_image:
  stage: build_and_push:tmp_dev_image
  extends:
    - .build_docker_image
  variables:
    BASE_IMAGE_CACHE_TAG: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-base
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_BUILD_ARGS: "--build-arg RAILS_ENV=development"
    DOCKER_BUILD_CONTEXT: "ansible/roles/finding_aid_discovery/files/src/"
    DOCKER_TARGET: "development"
    DOCKERFILE_PATH: "ansible/roles/finding_aid_discovery/files/src/"
  needs:
    - push_tmp_base_app_image_to_registry
  tags:
    - build

push_tmp_dev_app_image_to_registry:
  stage: build_and_push:tmp_dev_image
  extends:
    - .push_docker_image
  needs:
    - build_dev_app_image
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_IMAGE_NAME: "app"
    DOCKER_TARGET: "development"
    IMAGE_TAGS: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  tags:
    - build
# -- End - build, push temp dev image

# -- Start - build and push temp solr image
build_solr_image:
  stage: build_and_push:tmp_solr_image
  extends:
    - .build_docker_image
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-solr
    DOCKER_BUILD_CONTEXT: "ansible/roles/solr/files/src/"
    DOCKERFILE_PATH: "ansible/roles/solr/files/src/"
  tags:
    - build

push_tmp_solr_image_to_registry:
  stage: build_and_push:tmp_solr_image
  extends:
    - .push_docker_image
  needs:
    - build_solr_image
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-solr
    DOCKER_IMAGE_NAME: "solr"
    IMAGE_TAGS: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  tags:
    - build
# -- End - build and push temp solr image

# -- Start - test dev image
rspec_app_test:
  stage: test
  image: ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-development
  services:
    - name: browserless/chrome:1.50-chrome-stable
      alias: chrome
    - postgres:14
    - name: ${CI_REGISTRY_IMAGE}/solr:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
      alias: solr
  extends:
    - .rspec
  variables:
    CHROME_URL: "http://chrome:3000"
    CONFIG_LOCATION: "/finding_aid_discovery_configs"
    CORE_NAME: "finding-aid-discovery-core"
    DATABASE_NAME: "finding_aid_discovery"
    DATABASE_PASSWORD: "rspec_test"
    DATABASE_USER: "rspec_test"
    FF_NETWORK_PER_BUILD: "true"
    POSTGRES_DB: "finding_aid_discovery"
    POSTGRES_PASSWORD: "rspec_test"
    POSTGRES_USER: "rspec_test"
    RAILS_ENV: "test"
    SOLR_URL: "http://solr:8983/solr/finding-aid-discovery-core"
  script:
    - cd ${CI_PROJECT_DIR}/ansible/roles/finding_aid_discovery/files/src/
    - bundle add rspec_junit_formatter
    - bundle exec rake db:migrate
    - bundle exec rspec --format progress --format RspecJunitFormatter --out rspec.xml
  needs:
    - push_tmp_dev_app_image_to_registry
    - push_tmp_solr_image_to_registry
  allow_failure: true
  artifacts:
    paths:
      - ansible/roles/finding_aid_discovery/files/src/tmp/screenshots
      - ansible/roles/finding_aid_discovery/files/src/rspec.xml
    expire_in: 1 week
    reports:
      junit: ansible/roles/finding_aid_discovery/files/src/rspec.xml
  rules:
    - if: $DISABLE_RSPEC_TEST == "true"
      when: never
    - exists:
        - ansible/roles/finding_aid_discovery/files/src/spec/**.rb
        - ansible/roles/finding_aid_discovery/files/src/spec/**/**.rb
  tags:
    - build
# -- End - test dev image

# -- Start - build and push temp prod image
build_prod_app_image:
  stage: build_and_push:tmp_prod_image
  extends:
    - .build_docker_image
  variables:
    BASE_IMAGE_CACHE_TAG: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-base
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_BUILD_ARGS: "--build-arg RAILS_ENV=production"
    DOCKER_BUILD_CONTEXT: "ansible/roles/finding_aid_discovery/files/src/"
    DOCKER_TARGET: "production"
    DOCKERFILE_PATH: "ansible/roles/finding_aid_discovery/files/src/"
  needs:
    - rspec_app_test
  tags:
    - build

push_tmp_prod_app_image_to_registry:
  stage: build_and_push:tmp_prod_image
  extends:
    - .push_docker_image
  needs:
    - build_prod_app_image
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_IMAGE_NAME: "app"
    DOCKER_TARGET: "production"
    DOCKERFILE_PATH: "ansible/roles/finding_aid_discovery/files/src/"
    IMAGE_TAGS: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  tags:
    - build
# -- End - build and push temp prod image

# -- Start - SAST images
# Test application image
trivy_app_container_scanning:
  stage: sast
  extends:
    - .trivy_container_scanning
  before_script:
    - apk add --no-cache docker
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  after_script:
    - docker logout ${CI_REGISTRY}
  needs:
    - push_tmp_prod_app_image_to_registry
  variables:
    CI_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-production
  tags:
    - build
  allow_failure: true

# Test solr image
trivy_solr_container_scanning:
  stage: sast
  extends:
    - .trivy_container_scanning
  before_script:
    - apk add --no-cache docker
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  after_script:
    - docker logout ${CI_REGISTRY}
  needs:
    - rspec_app_test
  variables:
    CI_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/solr:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  tags:
    - build
  allow_failure: true
# -- End - SAST images

# -- Start - Remove temp images from registry
remove_tmp_dev_app_image_from_registry:
  stage: remove:tmp_images_from_registry
  extends:
    - .remove_docker_image_from_registry
  variables:
    IMAGE_TAG: ${CI_PROJECT_PATH}/app:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-development
  rules:
    - when: always
  needs:
    - rspec_app_test
  tags:
    - build
  allow_failure: true

remove_tmp_prod_app_image_from_registry:
  stage: remove:tmp_images_from_registry
  extends:
    - .remove_docker_image_from_registry
  variables:
    IMAGE_TAG: ${CI_PROJECT_PATH}/app:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-production
  rules:
    - when: always
  needs:
    - trivy_app_container_scanning
  tags:
    - build
  allow_failure: true

remove_tmp_solr_image_from_registry:
  stage: remove:tmp_images_from_registry
  extends:
    - .remove_docker_image_from_registry
  variables:
    IMAGE_TAG: ${CI_PROJECT_PATH}/solr:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  rules:
    - when: always
  needs:
    - trivy_solr_container_scanning
  tags:
    - build
  allow_failure: true


remove_tmp_base_app_image_from_registry:
  stage: remove:tmp_images_from_registry
  extends:
    - .remove_docker_image_from_registry
  variables:
    IMAGE_TAG: ${CI_PROJECT_PATH}/app:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-base
  rules:
    - when: always
  needs:
    - build_dev_app_image
    - build_prod_app_image
  tags:
    - build
  allow_failure: true
# -- End - Remove temp images from registry

# -- Start - push final images to registry
push_base_app_image_to_registry:
  stage: push:final_images
  extends:
    - .push_docker_image
  needs:
    - remove_tmp_base_app_image_from_registry
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_IMAGE_NAME: "app"
    DOCKER_TARGET: "base"
  tags:
    - build

push_dev_app_image_to_registry:
  stage: push:final_images
  extends:
    - .push_docker_image
  needs:
    - remove_tmp_dev_app_image_from_registry
    - rspec_app_test
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_IMAGE_NAME: "app"
    DOCKER_TARGET: "development"
  tags:
    - build

push_prod_app_image_to_registry:
  stage: push:final_images
  extends:
    - .push_docker_image
  needs:
    - remove_tmp_prod_app_image_from_registry
    - trivy_app_container_scanning
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
    DOCKER_IMAGE_NAME: "app"
    DOCKER_TARGET: "production"
    TAG_IMAGE_WITH_TARGET: "false"
  tags:
    - build

push_solr_image_to_registry:
  stage: push:final_images
  extends:
    - .push_docker_image
  needs:
    - remove_tmp_solr_image_from_registry
    - trivy_solr_container_scanning
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-solr
    DOCKER_IMAGE_NAME: "solr"
  tags:
    - build
# -- End - push final images to registry

# -- Start - remove images passed through pipeline
remove_tmp_base_app_image_from_host:
  stage: remove:tmp_images_from_host
  extends:
    - .remove_docker_image
  needs:
    - push_base_app_image_to_registry
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-base
  rules:
    - when: always
  tags:
    - build

remove_tmp_app_dev_image_from_host:
  stage: remove:tmp_images_from_host
  extends:
    - .remove_docker_image
  needs:
    - push_dev_app_image_to_registry
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-development
  rules:
    - when: always
  tags:
    - build

remove_tmp_registry_app_dev_image_from_host:
  stage: remove:tmp_images_from_host
  extends:
    - .remove_docker_image
  needs:
    - rspec_app_test
  variables:
    CI_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-development
  rules:
    - when: always
  tags:
    - build

remove_tmp_registry_app_prod_image_from_host:
  stage: remove:tmp_images_from_host
  extends:
    - .remove_docker_image
  needs:
    - trivy_app_container_scanning
  variables:
    CI_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-production
  rules:
    - when: always
  tags:
    - build

remove_tmp_app_prod_image_from_host:
  stage: remove:tmp_images_from_host
  extends:
    - .remove_docker_image
  needs:
    - push_prod_app_image_to_registry
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-production
  rules:
    - when: always
  tags:
    - build

remove_tmp_registry_solr_image_from_host:
  stage: remove:tmp_images_from_host
  extends:
    - .remove_docker_image
  needs:
    - trivy_solr_container_scanning
  variables:
    CI_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/solr:${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  rules:
    - when: always
  tags:
    - build

remove_tmp_solr_image_from_host:
  stage: remove:tmp_images_from_host
  extends:
    - .remove_docker_image
  needs:
    - push_solr_image_to_registry
  variables:
    CI_IMAGE_NAME: ${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}-solr
  rules:
    - when: always
  tags:
    - build
# -- End - remove images passed through pipeline
